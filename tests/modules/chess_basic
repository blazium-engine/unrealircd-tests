#!/usr/bin/python3
"""
Chess Module - Basic functionality tests
Tests chess game request, accept, and basic moves
"""

import irctestframework.irctest

m = irctestframework.irctest.IrcTest()
# All clients must be on the same server for chess to work
c1a = m.new('c1a')
c1b = m.new('c1b')
c1c = m.new('c1c')
m.connect()

# Test 1: Chess game request
print("[TEST] Chess game request")
m.send(c1a, "CHESS request $c1b 300")
m.expect(c1b, "c1b receives game request", ":.*900.*:.*challenges you to a chess game")
m.expect(c1a, "c1a gets confirmation", "NOTICE.*request sent")
m.clearlog()
print()

# Test 2: Chess game accept
print("[TEST] Chess game accept")
m.send(c1b, "CHESS accept $c1a")
m.expect(c1a, "c1a joins game channel", "JOIN :#chess-")
m.expect(c1b, "c1b joins game channel", "JOIN :#chess-")
m.expect(c1a, "c1a gets game start notification", ":.*901.*")
m.expect(c1b, "c1b gets game start notification", ":.*901.*")
m.expect(c1a, "c1a gets chess player mode", "MODE.*\\+c")
m.expect(c1b, "c1b gets chess player mode", "MODE.*\\+c")
m.clearlog()
print()

# Test 3: Valid chess move (White's first move)
print("[TEST] Valid chess move")
m.send(c1a, "CHESSMOVE e4")
m.expect(c1a, "c1a sees move notification", ":.*920.*e4")
m.expect(c1b, "c1b sees move notification", ":.*920.*e4")
m.clearlog()
print()

# Test 4: Black's response
print("[TEST] Black's move")
m.send(c1b, "CHESSMOVE e5")
m.expect(c1a, "c1a sees move notification", ":.*920.*e5")
m.expect(c1b, "c1b sees move notification", ":.*920.*e5")
m.clearlog()
print()

# Test 5: Another valid move
print("[TEST] Knight move")
m.send(c1a, "CHESSMOVE Nf3")
m.expect(c1a, "c1a sees move notification", ":.*920.*Nf3")
m.expect(c1b, "c1b sees move notification", ":.*920.*Nf3")
m.clearlog()
print()

# Test 6: Invalid move (wrong turn)
print("[TEST] Wrong turn")
m.send(c1a, "CHESSMOVE Bc4")
m.expect(c1a, "Wrong turn error", ":.*942.*")
m.clearlog()
print()

# Test 7: Valid black move
print("[TEST] Black knight move")
m.send(c1b, "CHESSMOVE Nc6")
m.expect(c1a, "c1a sees move notification", ":.*920.*Nc6")
m.expect(c1b, "c1b sees move notification", ":.*920.*Nc6")
m.clearlog()
print()

# Test 8: Board display
print("[TEST] Board display")
m.send(c1a, "CHESSBOARD")
m.expect(c1a, "Board display received", ":.*910.*")
m.clearlog()
print()

# Test 9: Chess clock
print("[TEST] Chess clock")
m.send(c1a, "CHESSCLOCK")
m.expect(c1a, "Timer info received", ":.*930.*")
m.clearlog()
print()

# Test 10: Game resignation
print("[TEST] Game resignation")
m.send(c1a, "CHESS resign")
m.expect(c1a, "c1a gets game end notification", ":.*902.*")
m.expect(c1b, "c1b gets game end notification", ":.*902.*")
m.expect(c1a, "Chess player mode removed", "MODE.*-c")
m.expect(c1b, "Chess player mode removed", "MODE.*-c")
m.clearlog()
print()

# Test 11: Game decline
print("[TEST] Game decline")
m.send(c1a, "CHESS request $c1b 300")
m.expect(c1b, "c1b receives game request", ":.*900.*")
m.clearlog()
m.send(c1b, "CHESS decline $c1a")
m.expect(c1a, "c1a notified of decline", "NOTICE.*declined")
m.clearlog()
print()

# Test 12: Observer can join game channel
print("[TEST] Observer mode")
# First start a game between c1a and c1b
m.send(c1a, "CHESS request $c1b 300")
m.clearlog()
m.send(c1b, "CHESS accept $c1a")
m.expect(c1a, "c1a game starts", ":.*901.*")
m.expect(c1b, "c1b game starts", ":.*901.*")
m.clearlog()

# c1c tries to observe
m.send(c1c, "JOIN #chess-$c1a-$c1b")
m.expect(c1c, "Observer joins", "JOIN :#chess-")
m.clearlog()

# Enable observer chat
m.send(c1c, "CHESSOBSERVER")
m.expect(c1c, "Observer mode enabled", "NOTICE.*observer")
m.clearlog()

# Cleanup - resign the game
m.send(c1a, "CHESS resign")
m.clearlog()
print()

print("All chess basic tests passed!")
