#!/usr/bin/python3
"""
World Module - Basic functionality tests
Tests world capability, join, movement, and basic commands with JSON validation
"""

import irctestframework.irctest

m = irctestframework.irctest.IrcTest()
# All clients must be on the same server for world to work
c1a = m.new('c1a')
c1b = m.new('c1b')
m.connect()

# Test 1: Client requests world capability
print("[TEST] Request world capability")
m.send(c1a, "CAP REQ :world/features")
m.expect(c1a, "Capability acknowledged", ".*ACK.*world/features")
m.clearlog()
print()

# Test 2: Create world channel
print("[TEST] Create world channel")
m.send(c1a, "JOIN #spawn")
m.send(c1a, "MODE #spawn +W spawn")
m.expect(c1a, "Channel mode set", ".*MODE.*\\+W")
m.clearlog()
print()

# Test 3: Attempt join without capability (should fail)
print("[TEST] Join without capability")
m.send(c1b, "JOIN #spawn")
m.expect(c1b, "Join denied", ".*ERR.*world.*cap")
m.clearlog()
print()

# Test 4: Client b requests capability
print("[TEST] Client b requests capability")
m.send(c1b, "CAP REQ :world/features")
m.expect(c1b, "Capability acknowledged", ".*ACK.*world/features")
m.clearlog()
print()

# Test 5: Join world channel
print("[TEST] Join world channel")
m.send(c1b, "JOIN #spawn")
m.expect(c1b, "Joins channel", "JOIN.*#spawn")
m.clearlog()
print()

# Test 6: WORLD join command with JSON validation
print("[TEST] WORLD join command with JSON")
m.send(c1a, "WORLD join")
m.expect(c1a, "World join confirmation", ":.*2200.*")
m.expect(c1a, "JSON data tag", "@unrealircd.org/world-data=")
m.expect(c1a, "User mode +w set", "MODE.*\\+w")
m.clearlog()
print()

# Test 7: MOVE command with message tags
print("[TEST] MOVE command with tags")
m.send(c1a, "MOVE north")
m.expect(c1a, "Move confirmation", ":.*2210.*")
m.expect(c1a, "JSON data tag", "@unrealircd.org/world-data=")
m.clearlog()
print()

# Test 8: FACE command
print("[TEST] FACE command")
m.send(c1a, "FACE east")
m.expect(c1a, "Face confirmation", ":.*2211.*")
m.expect(c1a, "JSON data tag", "@unrealircd.org/world-data=")
m.clearlog()
print()

# Test 9: WORLD show info with JSON validation
print("[TEST] WORLD show info with JSON")
m.send(c1a, "WORLD show")
m.expect(c1a, "World info received", ":.*2202.*")
m.expect(c1a, "JSON data tag", "@unrealircd.org/world-data=")
m.clearlog()
print()

# Test 10: Multiple users in world
print("[TEST] Multiple users in world")
m.send(c1b, "WORLD join")
m.expect(c1b, "c1b world join", ":.*2200.*")
m.expect(c1b, "c1b user mode +w", "MODE.*\\+w")
m.expect(c1a, "c1a sees c1b join broadcast", "WORLD.*JOIN")
m.clearlog()
print()

# Test 11: WORLD part command
print("[TEST] WORLD part command")
m.send(c1a, "WORLD part")
m.expect(c1a, "World part confirmation", ":.*2201.*")
m.expect(c1a, "User mode +w removed", "MODE.*-w")
m.clearlog()
print()

# Test 12: Rejoin world preserves position
print("[TEST] Rejoin world")
m.send(c1a, "WORLD join")
m.expect(c1a, "World join confirmation", ":.*2200.*")
m.expect(c1a, "User mode +w set", "MODE.*\\+w")
m.clearlog()
print()

print("All basic tests completed successfully!")

