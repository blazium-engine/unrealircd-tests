#!/usr/bin/python3
"""
Chess Module - Cross-Server Game Tests
NOTE: Cross-server games require Chess Module v2.1+
      If your version doesn't support cross-server, skip this test
"""

import irctestframework.irctest
import sys

m = irctestframework.irctest.IrcTest()

# Create clients - framework assigns to different servers automatically
c1a = m.new('c1a')
c2a = m.new('c2a')
c3a = m.new('c3a')
m.connect()

# Test if cross-server is supported
print("[TEST] Cross-server support detection")
m.send(c1a, "CHESS request $c2a 300")

# Check for either success (905) or "must be on same server" error (950)
# If we get 950, skip all cross-server tests
try:
    m.expect(c1a, "Cross-server supported", ":.*905.*", timeout=1)
    cross_server_supported = True
    print("✓ Cross-server games ARE supported")
    m.clearlog()
except:
    # Got error 950 - cross-server not supported
    print("⚠ Cross-server games NOT supported - skipping cross-server tests")
    print("  (Chess Module v2.0 only supports same-server games)")
    print("  (Upgrade to v2.1+ for cross-server support)")
    sys.exit(0)

# If we get here, cross-server is supported - continue with tests

# Test 1: Cross-server game accept
print("[TEST] Cross-server game accept")
m.send(c2a, "CHESS accept $c1a")
m.expect_all("Game starts", ":.*901.*")
m.expect(c1a, "c1a gets player mode", "MODE.*\\+c")
m.expect(c2a, "c2a gets player mode", "MODE.*\\+c")
m.clearlog()
print()

# Test 2: Cross-server move synchronization
print("[TEST] Cross-server move synchronization")
m.send(c1a, "CHESSMOVE e4")
m.expect(c1a, "c1a sees move", ":.*920.*")
m.expect(c2a, "c2a sees move across servers", ":.*920.*e4")
m.clearlog()

m.send(c2a, "CHESSMOVE e5")
m.expect(c1a, "c1a sees opponent move", ":.*920.*e5")
m.expect(c2a, "c2a sees own move", ":.*920.*e5")
m.clearlog()
print()

# Test 3: Third server observer
print("[TEST] Observer on third server")
m.send(c3a, "GAMES chess")
m.expect(c3a, "c3a sees game list", ":.*903.*")
m.clearlog()
print()

# Test 4: Cross-server game end
print("[TEST] Cross-server game resignation")
m.send(c1a, "CHESS resign")
m.expect(c1a, "c1a sees game end", ":.*902.*")
m.expect(c2a, "c2a sees game end across servers", ":.*902.*")
m.expect(c1a, "c1a loses player mode", "MODE.*-c")
m.expect(c2a, "c2a loses player mode", "MODE.*-c")
m.clearlog()
print()

# Test 5: Multiple concurrent cross-server games
print("[TEST] Cannot be in two games simultaneously")
m.send(c1a, "CHESS request $c2a 600")
m.clearlog()
m.send(c2a, "CHESS accept $c1a")
m.clearlog()

# c1a tries to start another game (should fail)
m.send(c1a, "CHESS request $c3a 600")
m.expect(c1a, "c1a already in game (944)", ":.*944.*")
m.clearlog()

# End game 1
m.send(c1a, "CHESS resign")
m.clearlog()

# Now c1a can start new game
m.send(c1a, "CHESS request $c3a 600")
m.expect(c1a, "c1a request sent", ":.*905.*")
m.expect(c3a, "c3a receives request", ":.*900.*")
m.clearlog()

m.send(c3a, "CHESS accept $c1a")
m.expect_all("Cross-server game starts", ":.*901.*")
m.clearlog()

# Cleanup
m.send(c1a, "CHESS resign")
m.clearlog()
print()

# Test 6: Cross-server draw offers
print("[TEST] Cross-server draw offer")
m.send(c1a, "CHESS request $c2a 300")
m.clearlog()
m.send(c2a, "CHESS accept $c1a")
m.clearlog()

# c1a offers draw
m.send(c1a, "CHESS draw")
m.expect(c1a, "c1a offered draw", ":.*918.*")
m.expect(c2a, "c2a sees draw offer across servers", ":.*918.*")
m.clearlog()

# c2a accepts draw
m.send(c2a, "CHESS draw")
m.expect_all("Draw accepted", ":.*902.*Draw")
m.clearlog()
print()

# Test 7: Cross-server checkmate
print("[TEST] Cross-server checkmate (Scholar's Mate)")
m.send(c1a, "CHESS request $c2a 600")
m.clearlog()
m.send(c2a, "CHESS accept $c1a")
m.clearlog()

# Scholar's Mate sequence
m.send(c1a, "CHESSMOVE e4")
m.clearlog()
m.send(c2a, "CHESSMOVE e5")
m.clearlog()
m.send(c1a, "CHESSMOVE Qh5")
m.clearlog()
m.send(c2a, "CHESSMOVE Nc6")
m.clearlog()
m.send(c1a, "CHESSMOVE Bc4")
m.clearlog()
m.send(c2a, "CHESSMOVE Nf6")
m.clearlog()
m.send(c1a, "CHESSMOVE Qxf7")
m.expect(c1a, "c1a sees checkmate", ":.*902.*Checkmate")
m.expect(c2a, "c2a sees checkmate across servers", ":.*902.*Checkmate")
m.clearlog()
print()

print("All cross-server chess tests passed!")
